20140320 (T.S.):
 - sis8300-R1-0-0 RELEASE
20140310 (T.S.):
 - sis8300/sis8300.c, sis8300/sis8300.h: added 'fd' argument
   to sis8300DigiValidateSel() since there are now models with only 8 ch.
   Having access to 'fd' the code can figure out the supported number
   of channels.
 - sis8300/sis8300.c: sis8300DigiSetCount() - BUGFIX: channel-disable
   mask was incorrectly computed if CH9 or CH10 were unused (both
   of these were always enabled and could corrupt readings of other
   channels in memory).
20131212 (T.S.):
 - sis8300/sis8300Digi.c, sis8300/sis8300Digi.h: added entry points
   si5326_status()
20131206 (T.S.):
 - sis8300/sis8300Digi.c sis8300/sis8300Digi.h: added entry points
   (sis8300Set9510Divider(), sis8300Get9510Clkhl()) to manipulate
   the 9510 divider ratio.
20131105 (T.S.):
 - sis8300/sis3800Digi.c:
    o fixed sis8300BuildChannelSel() (truncation to 32-bit issues)
    o do a few retries when waiting for Si5326 to lock
20131101 (T.S.):
 - sis8300Digi.c: 
    o when reading/writing ADC via SPI wait until not busy.
    o only set tap delay for supported of # channels
    o FIX: wait until tap dealy register *NOT* busy
 - added saio.c, saio.h (wrappers for linux' AIO syscalls)
 - made si5326_setup(int fd, Si5326Parms p) public
 - added sis8300DigiGetADC_ID(int fd)
 - added sis8300DigiGetFclkMax(int fd)
 - sis8300DigiSetup(): initially set MUX to internal clock and
   AD9510 to divide by 32; check whether the max. clock of the
   ADC is compatible with the requested clock frequency and
   reject if necessary. Program the final mux. and 9510 settings
   only if frequency check passes.

